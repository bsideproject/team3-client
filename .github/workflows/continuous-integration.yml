name: 테스트 진행. (reviewer 승인시 Staging 배포)
env:
  CONF_SERVER_PORT: 3000
  CONF_DOCKER_REGISTRY: bside-front.kr.ncr.ntruss.com
  CONF_DOCKER_IMAGE: staging:latest
on:
  push:
    branches:
      - staging
    paths-ignore:
      - '**.md'

jobs:
  test:
    name: 단위테스트 & 통합테스트 진행
    runs-on: ubuntu-latest
    environment: test
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - run: npm ci
      - run: npm run test:ci

  deploy:
    name: Staging 서버 배포
    needs: test
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to NCP Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.CONF_DOCKER_REGISTRY }}
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: staging 빌드를 위한 .env.production.local 파일 생성
        run: |
          echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" >> .env.production.local
          echo "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> .env.production.local
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.CONF_DOCKER_REGISTRY }}/${{ env.CONF_DOCKER_IMAGE }}
          CI_build-args: PORT=${{ env.CONF_SERVER_PORT }}

      - name: replace old container as latest container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY}}
          script: |
            docker rm $(docker stop $(docker ps -a -q --filter ancestor=${{ env.CONF_DOCKER_REGISTRY }}/${{ env.CONF_DOCKER_IMAGE }} --format="{{.ID}}"))
            docker pull ${{ env.CONF_DOCKER_REGISTRY }}/${{ env.CONF_DOCKER_IMAGE }}
            docker run -d -p ${{ env.CONF_SERVER_PORT }}:${{ env.CONF_SERVER_PORT }} --restart unless-stopped ${{ env.CONF_DOCKER_REGISTRY }}/${{ env.CONF_DOCKER_IMAGE }}
